version: '3.7'

services:

    todos:
        build:
            context: ./services/todos/docker
            args:
                - TZ=${TIMEZONE}
                - USERNAME=${TODOS_USER}
        environment: 
            - TODOS_ROOT=${TODOS_ROOT}
            - JUPYTER_CONFIG=${JUPYTER_CONFIG}
            - GUNICORN_CONFIG=${GUNICORN_CONFIG}
            - PYTHONPATH=${TODOS_ROOT}
            - MONGO_USER=mongouser
            - MONGO_PASSWORD=averysecurepassword
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        user: 1000:1000
        working_dir: ${TODOS_ROOT}
        command: ["sh","scripts/start_all.sh"]
        volumes:
            - ./services/todos/src:${TODOS_ROOT}
            - ./services/todos/config:/config
            - ./library:${TODOS_ROOT}/library
        networks: 
            - mongo_network
            - redis_network
        ports:
            - 8888:8888 #Jupyter Notebook
            - 5000:5000 #REST API
            - 5555:5555 #Flower

            
    reports:
        build:
            context: ./services/reports/docker
            args:
                - TZ=${TIMEZONE}
                - USERNAME=${REPORTS_USER}
        environment: 
            - REPORTS_ROOT=${REPORTS_ROOT}
            - JUPYTER_CONFIG=${JUPYTER_CONFIG}
            - GUNICORN_CONFIG=${GUNICORN_CONFIG}
            - PYTHONPATH=${REPORTS_ROOT}
            - MONGO_USER=mongouser
            - MONGO_PASSWORD=averysecurepassword
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        user: 1000:1000
        working_dir: ${REPORTS_ROOT}
        command: ["sh","scripts/start_all.sh"]
        volumes:
            - ./services/reports/src:${REPORTS_ROOT}
            - ./services/reports/config:/config
            - ./library:${REPORTS_ROOT}/library
        networks: 
            - mongo_network
            - redis_network
        ports:
            - 8889:8888 #Jupyter Notebook


    mongo:
        image: mongo
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
        volumes:
            - mongo_data:/data/db
        networks:
            - mongo_network

    mongo-express:
        image: mongo-express
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_USER}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_PASSWORD}
        depends_on:
            - mongo
        networks:
            - mongo_network
        ports:
            - 20048:8081

    redis:
        image: redis:latest
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        user: 1000:1000
        command: [
                sh,
                -c,
                'rm -f /data/dump.rdb && redis-server  --requirepass $REDIS_PASSWORD --save "" --appendonly "no"',
            ] # disable persistence
        networks:
            - redis_network


    node:
        image: node:latest
        user: 1000:1000
        volumes:
            - ./services/webapp:/webapp
        command: sh /webapp/start_server.sh
        ports:
            - 8000:8000

networks:
    mongo_network:
        driver: bridge
    redis_network:
        driver: bridge

volumes: 
    mongo_data:

    

